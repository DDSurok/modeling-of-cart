using System;
using System.Drawing;
using System.Collections.Generic;

namespace Телега.Графические_объекты
{
    struct Колесо
    {
        Точка Ось_поворота;
        public Квадрат квадрат;
        public static void Установить_значения(ref Колесо колесо, Область_построения область_построения, Color цвет, double центр_X, double центр_Y, int Размер_колеса, double угол_поворота = 0)
        {
            Квадрат.Установить_значения(ref колесо.квадрат, центр_X, центр_Y, Размер_колеса, цвет);
            колесо.Ось_поворота = Колесо.Найти_ось_вращения(ref колесо, область_построения);
        }
        public static void Повернуть(ref Колесо колесо, Область_построения область_построения)
        {
            Квадрат.Повернуть(ref колесо.квадрат, область_построения, колесо.Ось_поворота.X, колесо.Ось_поворота.Y);
            колесо.Ось_поворота = Колесо.Найти_ось_вращения(ref колесо, область_построения);
        }
        /// <summary>
        /// Производит поиск самого правого касания колеса с поверхностью
        /// </summary>
        private static Точка Найти_ось_вращения(ref Колесо колесо, Область_построения область_построения)
        {
            List<Точка> list = new List<Точка>();
            foreach (Линия линия in колесо.квадрат.Стороны)
            {
                if (линия.Начало.X <= линия.Конец.X)
                    Колесо.Проверка_линии_на_пересечение_с_поверхностью(ref колесо, область_построения,
                        ref list, линия.Начало.X, линия.Конец.X, линия.Начало.Y, линия.Конец.Y);
                else
                    Колесо.Проверка_линии_на_пересечение_с_поверхностью(ref колесо, область_построения,
                        ref list, линия.Конец.X, линия.Начало.X, линия.Конец.Y, линия.Начало.Y);
            }
            Точка С_максимальным_значением_X;
            if (list.Count > 0)
                С_максимальным_значением_X = list[0];
            else
                С_максимальным_значением_X = колесо.Ось_поворота;
            foreach (Точка точка in list)
            {
                if (точка.X > С_максимальным_значением_X.X)
                    С_максимальным_значением_X = точка;
            }
            return С_максимальным_значением_X;
        }
        private static void Проверка_линии_на_пересечение_с_поверхностью(ref Колесо колесо,
            Область_построения область_построения,
            ref List<Точка> list, double x1, double x2, double y1, double y2)
        {
            for (double x = x1; x < x2; x++)
            {
                double y = y1 + (y2 - y1) * (x - x1) / (x2 - x1);
                if (y <= Поверхность.Значение_для_X(область_построения.поверхность, область_построения, x))
                {
                    Точка точка = new Точка();
                    Точка.Установить_значения(ref точка, x, y, колесо.квадрат.Стороны[0].Цвет);
                    list.Add(точка);
                }
            }
        }
    }
}
