using System;
using System.Drawing;
using System.Windows.Forms;

namespace Телега.Графические_объекты
{
    class Область_построения : Panel
    {
        private Параметры параметры;
        public Color Цвет_левого_колеса
        {
            get
            {
                return this.параметры.Цвет_левого_колеса;
            }
            set
            {
                this.параметры.Цвет_левого_колеса = value;
                this.Инициализация_графических_объектов();
            }
        }
        public int Размер_левого_колеса
        {
            get
            {
                return this.параметры.Размер_левого_колеса;
            }
            set
            {
                this.параметры.Размер_левого_колеса = value;
                this.Инициализация_графических_объектов();
            }
        }
        public Color Цвет_правого_колеса
        {
            get
            {
                return this.параметры.Цвет_правого_колеса;
            }
            set
            {
                this.параметры.Цвет_правого_колеса = value;
                this.Инициализация_графических_объектов();
            }
        }
        public int Размер_правого_колеса
        {
            get
            {
                return this.параметры.Размер_правого_колеса;
            }
            set
            {
                this.параметры.Размер_правого_колеса = value;
                this.Инициализация_графических_объектов();
            }
        }
        public Color Цвет_телеги
        {
            get
            {
                return this.параметры.Цвет_телеги;
            }
            set
            {
                this.параметры.Цвет_телеги = value;
                this.Инициализация_графических_объектов();
            }
        }
        public int Длина_телеги
        {
            get
            {
                return this.параметры.Длина_телеги;
            }
            set
            {
                this.параметры.Длина_телеги = value;
                this.Инициализация_графических_объектов();
            }
        }
        public int Высота_телеги
        {
            get
            {
                return this.параметры.Высота_телеги;
            }
            set
            {
                this.параметры.Высота_телеги = value;
                this.Инициализация_графических_объектов();
            }
        }
        public int Скорость_движения
        {
            get
            {
                return (int)Math.Round(this.параметры.Скорость_движения * 60);
            }
            set
            {
                this.параметры.Скорость_движения = (double)value / 60;
            }
        }
        public double Приращение_угла
        {
            get
            {
                return 0 - Math.PI * this.Скорость_движения / 180 / 60;
            }
        }
        public int Смещение_по_Y
        {
            get
            {
                return this.параметры.Смещение_по_Y;
            }
        }
        public Поверхность поверхность;
        Колесо Правое, Левое;
        Телега телега;
        public Область_построения()
            : base()
        {
            Параметры.Стандартные(ref this.параметры);
            this.Инициализация_графических_объектов();
        }

        private void Инициализация_графических_объектов()
        {
            try
            {
                Поверхность.Установить_значения(ref this.поверхность, Color.Green);
                Колесо.Установить_значения(ref this.Правое, this,
                                         this.параметры.Цвет_правого_колеса,
                                         0 - this.параметры.Размер_правого_колеса / 2,
                                         this.параметры.Смещение_по_Y - 1 + this.параметры.Размер_правого_колеса / 2,
                                         this.параметры.Размер_правого_колеса);
                Колесо.Установить_значения(ref this.Левое, this,
                                        this.параметры.Цвет_левого_колеса,
                                        0 - this.параметры.Размер_правого_колеса / 2 - Math.Sqrt(Math.Pow(this.параметры.Длина_телеги, 2) - Math.Pow(this.параметры.Размер_левого_колеса - this.параметры.Размер_правого_колеса, 2)),
                                        this.параметры.Смещение_по_Y - 1 + this.параметры.Размер_левого_колеса / 2,
                                        this.параметры.Размер_левого_колеса);
                Телега.Установить_значение(ref this.телега,
                                         this.Левое.квадрат.Центр,
                                         this.Правое.квадрат.Центр,
                                         this.параметры.Цвет_телеги);
            }
            catch (Exception)
            {
                MessageBox.Show("Длина телеги меньше чем половина разницы квадратов");
            }
        }

        public void Сдвинуть()
        {
            for (int i=0; i<10; i++)
                Колесо.Повернуть(ref this.Правое, this);
            while (Точка.Расстояние_между_двумя_точками(this.Правое.квадрат.Центр, this.Левое.квадрат.Центр) > this.параметры.Длина_телеги)
                Колесо.Повернуть(ref this.Левое, this);
            Телега.Обновить_положение(ref this.телега, this.Левое.квадрат.Центр, this.Правое.квадрат.Центр);
            this.OnPaint(null);
            this.Проверка_окончания_моделирования();
        }

        public void Сбросить_движение()
        {
            this.Инициализация_графических_объектов();
        }

        protected override void OnPaint(PaintEventArgs e)
        {
            Graphics gr = this.CreateGraphics();
            gr.Clear(Color.Black);
            Поверхность.Нарисовать(this.поверхность, this, ref gr);
            Квадрат.Нарисовать(this.Правое.квадрат, this, ref gr);
            Квадрат.Нарисовать(this.Левое.квадрат, this, ref gr);
            Телега.Нарисовать(this.телега, this, ref gr);
        }

        private void Проверка_окончания_моделирования()
        {
            Точка самая_левая = this.Левое.квадрат.Центр;
            foreach (Линия линия in this.Левое.квадрат.Стороны)
            {
                if (самая_левая.X > линия.Начало.X)
                    самая_левая = линия.Начало;
                if (самая_левая.X > линия.Конец.X)
                    самая_левая = линия.Конец;
            }
            if (самая_левая.X > this.Width)
                throw new Exception("Моделирование окончено");
        }
    }
}
